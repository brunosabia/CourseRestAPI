O padrão de projetos VO ( Value Object )

importante na arquitetura de qualquer projeto.


Utilização do DozerConverter para converter VOs para entidades e vice versa.


Esse padrão provê maior segurança a nossa aplicação. Até agora a nossa API expoe as entidades exatamente iguais as estruturas que temos salvo no bd. isso nao é algo interessante, pois permite ao cliente conhecer a estrutura do BD. O ideal é criar uma classe intermediária responsável pela exposição dos nossos dados.
Com isso tanto o fluxo dos dados quanto a arquitetura da nossa app vai mudar


BASICAMENTE:

Em vez de recebermos os atributos via body, por exemplo e automaticamente adaptarmos com o controller, agora o controller receberá Value Objects, e encaminhará pra uma outra camada, chamada Services/Business onde ela fará a conversão de VO para Obj para que será enviado para a outra camada Repository e só então ela será persistida em um BD.

Exemplo
Em um request de findById GET:

Controller recebe um VO
VO é enviado para a camada Services ou Business
Nessa camada ele é transformado em um obj.
É enviado para o repositório que fara a consulta desse id recebido no BD
O obj encontrado é devolvido do repos. para o Services
O services vai transformar o OBJ em VO novamente
Services envia o VO para o controller 
Controller envia o response com um VO.



Além disso, o VO permite que as informações passadas pelo client sejam organizadas de forma diferente
por exemplo, em um obj Person, preenchido pelo client, o Client pode digitar o nome completo e preencher uma variável NAME
e o VO pode pegar essa mesma variavel e pelas regras de negócio , separar essa variavel em FirstName e LastName
ou pegar as duas variaveis e adaptar para uma só.


OUTRO PONTO POSITIVO é que o VO permite que vc possa versionar seus endpoints; Ex:
Se vc tenta adicionar uma nova tabela no BD.
Se a sua arquitetura expoe as entidades diretamente pro client, vc nao pode fazer isso pois possivelmente irá quebrar as applicacoes que consomem esse endpoint
O VO permite lidar com isso de forma mais simples
Você pode criar um VO novo, e expor os clientes para essa nova versão.
Bastaria ai avisar os clientes anteriores de uma data limite e fazê-los migrar para a nova versão até lá
