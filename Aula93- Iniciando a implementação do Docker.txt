41 RestWithSpringBootUdemy Docker

primeiramente acessamos a pasta acima, e movemos todo o conteudo do projeto pra subpasta:
RestWithSpringBootUdemy 

junto com essa pasta que criamos( a RestWithSpringBootUdemy ) nós criamos dois arquivos de texto,
um "docker-compose.yml" e um "Dockerfile" sem nenhuma extensão mesmo. (este dockerfile é responsável pra configurar o banco de dados)

Dentro da pasta RestWithSpringBootUdemy nós criamos outro "Dockerfile" sem extensão tambem. ( este será usado para configurar a aplicação)


ABRIMOS o Dockerfile da aplicação. 

vamos até o site:
https://hub.docker.com/
onde iremos procurar pela imagem do Maven (no caso o prof usou a  3.6.1 mas ela nao está mais disponivel entao uso a 3.8.1-jdk-11-slim.

Editamos os 3 arquivos criados e com códigos pro docker.

sendo o docker-compose.yml o que sobrescreverá os outros. caso possuam definicoes diferentes de itens iguais.
 após isso, abrimos o prompt de comando do windows, e vamos até a pasta do arquivo docker-compose.yml com o "cd PATH_DA_PASTA"
para confirmar é legal utilizar um comando "ls" no prompt que ele mostra o que está na pasta que vc se encontra.

em seguida utilizamos os comandos para o docker como:

Para buildar os container:
docker-compose build

Para forçar uma reinicializaçao do container e subir a aplicação:
docker-compose up -d --build

Para subir a aplicação apenas:
docker-compose up

Para mostrar todos os containers:
docker ps -a   

Para mostrar os logs do container especifico:
docker logs ID_DO_CONTAINER

Para realizar o login com o docker:
docker login docker.io

Para exibir as imagens que você tem no seu repositório:
docker images

para fazer o update de uma imagem para o dockerHub:
docker push NOME_DA_IMAGEM



